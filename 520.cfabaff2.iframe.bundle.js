"use strict";(self.webpackChunknhm_ui=self.webpackChunknhm_ui||[]).push([[520],{"./src/Input/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{I:()=>Input});__webpack_require__("./node_modules/react/index.js");var clsx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./src/tailwind.css"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const Input=({...props})=>{const requiredClasses=props.required?"text-red-600":"",disabledClasses=props.disabled?"opacity-50 cursor-not-allowed":"",widthClasses="full"===props.width?"w-full":"1/3"===props.width?"w-full sm:basis-[calc(33.3%-.67rem)]":"1/2"===props.width?"w-full sm:basis-[calc(50%-.5rem)]":"2/3"===props.width?"w-full sm:basis-[calc(66.7%-.33rem)]":"w-full";return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxs)("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_3__.Z)("flex flex-col gap-1",widthClasses),children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("label",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_3__.Z)("font-bold text-sm",requiredClasses,disabledClasses),htmlFor:props.name,children:props.label+(props.required?" *":"")}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("input",{type:props.type,id:props.name,name:props.name,onChange:props.onChange,required:props.required,disabled:props.disabled,placeholder:props.placeholder,className:(0,clsx__WEBPACK_IMPORTED_MODULE_3__.Z)(props.classes,!props.disabled&&"focus:border-black hover:border-black font-semibold","border-2  bg-white focus:outline-0 transition-colors border-gray-300 px-4 py-4 text-[#333333] lining-nums",disabledClasses)}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("span",{className:"ml-1 text-sm",children:props.caption})]})};Input.displayName="Input";try{Input.displayName="Input",Input.__docgenInfo={description:"",displayName:"Input",props:{disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!0,type:{name:"string"}},required:{defaultValue:null,description:"",name:"required",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"",name:"placeholder",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"enum",value:[{value:'"1/2"'},{value:'"2/3"'},{value:'"full"'},{value:'"1/3"'}]}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"number"'},{value:'"text"'},{value:'"email"'},{value:'"password"'}]}},caption:{defaultValue:null,description:"",name:"caption",required:!1,type:{name:"string"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((e: ChangeEvent<HTMLInputElement>) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/Input/index.tsx#Input"]={docgenInfo:Input.__docgenInfo,name:"Input",path:"src/Input/index.tsx#Input"})}catch(__react_docgen_typescript_loader_error){}},"./src/InputGroup/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{B:()=>InputGroup});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),clsx__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/clsx/dist/clsx.m.js"),istanbul_lib_coverage__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/istanbul-lib-coverage/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const InputGroup=({...props})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)("div",{className:(0,clsx__WEBPACK_IMPORTED_MODULE_3__.Z)("flex flex-row flex-wrap gap-4","w-full",istanbul_lib_coverage__WEBPACK_IMPORTED_MODULE_1__.classes),onChange:props.onChange,children:react__WEBPACK_IMPORTED_MODULE_0__.Children.map(props.children,((child,i)=>react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child,{...child.props,i,onChange:props.onChange})))});InputGroup.displayName="InputGroup";try{InputGroup.displayName="InputGroup",InputGroup.__docgenInfo={description:"",displayName:"InputGroup",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((event: ChangeEvent<HTMLInputElement>) => void)"}},classes:{defaultValue:null,description:"",name:"classes",required:!1,type:{name:"string"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/InputGroup/index.tsx#InputGroup"]={docgenInfo:InputGroup.__docgenInfo,name:"InputGroup",path:"src/InputGroup/index.tsx#InputGroup"})}catch(__react_docgen_typescript_loader_error){}},"./node_modules/istanbul-lib-coverage/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{const{FileCoverage}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/file-coverage.js"),{CoverageMap}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/coverage-map.js"),{CoverageSummary}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/coverage-summary.js");module.exports={createCoverageSummary:obj=>obj&&obj instanceof CoverageSummary?obj:new CoverageSummary(obj),createCoverageMap:obj=>obj&&obj instanceof CoverageMap?obj:new CoverageMap(obj),createFileCoverage:obj=>obj&&obj instanceof FileCoverage?obj:new FileCoverage(obj)},module.exports.classes={FileCoverage}},"./node_modules/istanbul-lib-coverage/lib/coverage-map.js":(module,__unused_webpack_exports,__webpack_require__)=>{const{FileCoverage}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/file-coverage.js"),{CoverageSummary}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/coverage-summary.js");function maybeConstruct(obj,klass){return obj instanceof klass?obj:new klass(obj)}class CoverageMap{constructor(obj){this.data=obj instanceof CoverageMap?obj.data:function loadMap(source){const data=Object.create(null);return source?(Object.entries(source).forEach((([k,cov])=>{data[k]=maybeConstruct(cov,FileCoverage)})),data):data}(obj)}merge(obj){const other=maybeConstruct(obj,CoverageMap);Object.values(other.data).forEach((fc=>{this.addFileCoverage(fc)}))}filter(callback){Object.keys(this.data).forEach((k=>{callback(k)||delete this.data[k]}))}toJSON(){return this.data}files(){return Object.keys(this.data)}fileCoverageFor(file){const fc=this.data[file];if(!fc)throw new Error(`No file coverage available for: ${file}`);return fc}addFileCoverage(fc){const cov=new FileCoverage(fc),{path}=cov;this.data[path]?this.data[path].merge(cov):this.data[path]=cov}getCoverageSummary(){const ret=new CoverageSummary;return Object.values(this.data).forEach((fc=>{ret.merge(fc.toSummary())})),ret}}module.exports={CoverageMap}},"./node_modules/istanbul-lib-coverage/lib/coverage-summary.js":(module,__unused_webpack_exports,__webpack_require__)=>{const percent=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/percent.js"),dataProperties=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/data-properties.js");class CoverageSummary{constructor(obj){this.data=obj?obj instanceof CoverageSummary?obj.data:obj:{lines:{total:0,covered:0,skipped:0,pct:"Unknown"},statements:{total:0,covered:0,skipped:0,pct:"Unknown"},functions:{total:0,covered:0,skipped:0,pct:"Unknown"},branches:{total:0,covered:0,skipped:0,pct:"Unknown"},branchesTrue:{total:0,covered:0,skipped:0,pct:"Unknown"}},function assertValidSummary(obj){if(!(obj&&obj.lines&&obj.statements&&obj.functions&&obj.branches))throw new Error("Invalid summary coverage object, missing keys, found:"+Object.keys(obj).join(","))}(this.data)}merge(obj){return["lines","statements","branches","functions","branchesTrue"].forEach((key=>{obj[key]&&(this[key].total+=obj[key].total,this[key].covered+=obj[key].covered,this[key].skipped+=obj[key].skipped,this[key].pct=percent(this[key].covered,this[key].total))})),this}toJSON(){return this.data}isEmpty(){return 0===this.lines.total}}dataProperties(CoverageSummary,["lines","statements","functions","branches","branchesTrue"]),module.exports={CoverageSummary}},"./node_modules/istanbul-lib-coverage/lib/data-properties.js":module=>{module.exports=function dataProperties(klass,properties){properties.forEach((p=>{Object.defineProperty(klass.prototype,p,{enumerable:!0,get(){return this.data[p]}})}))}},"./node_modules/istanbul-lib-coverage/lib/file-coverage.js":(module,__unused_webpack_exports,__webpack_require__)=>{const percent=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/percent.js"),dataProperties=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/data-properties.js"),{CoverageSummary}=__webpack_require__("./node_modules/istanbul-lib-coverage/lib/coverage-summary.js");const keyFromLoc=({start,end})=>`${start.line}|${start.column}|${end.line}|${end.column}`,mergeProp=(aHits,aMap,bHits,bMap,itemKey=keyFromLoc)=>{const aItems={};for(const[key,itemHits]of Object.entries(aHits)){const item=aMap[key];aItems[itemKey(item)]=[itemHits,item]}for(const[key,bItemHits]of Object.entries(bHits)){const bItem=bMap[key],k=itemKey(bItem);if(aItems[k]){const aPair=aItems[k];bItemHits.forEach?bItemHits.forEach(((hits,h)=>{void 0!==aPair[0][h]?aPair[0][h]+=hits:aPair[0][h]=hits})):aPair[0]+=bItemHits}else aItems[k]=[bItemHits,bItem]}const hits={},map={};return Object.values(aItems).forEach((([itemHits,item],i)=>{hits[i]=itemHits,map[i]=item})),[hits,map]};class FileCoverage{constructor(pathOrObj,reportLogic=!1){if(!pathOrObj)throw new Error("Coverage must be initialized with a path or an object");if("string"==typeof pathOrObj)this.data=function emptyCoverage(filePath,reportLogic){const cov={path:filePath,statementMap:{},fnMap:{},branchMap:{},s:{},f:{},b:{}};return reportLogic&&(cov.bT={}),cov}(pathOrObj,reportLogic);else if(pathOrObj instanceof FileCoverage)this.data=pathOrObj.data;else{if("object"!=typeof pathOrObj)throw new Error("Invalid argument to coverage constructor");this.data=pathOrObj}!function assertValidObject(obj){if(!(obj&&obj.path&&obj.statementMap&&obj.fnMap&&obj.branchMap&&obj.s&&obj.f&&obj.b))throw new Error("Invalid file coverage object, missing keys, found:"+Object.keys(obj).join(","))}(this.data)}getLineCoverage(){const statementMap=this.data.statementMap,statements=this.data.s,lineMap=Object.create(null);return Object.entries(statements).forEach((([st,count])=>{if(!statementMap[st])return;const{line}=statementMap[st].start,prevVal=lineMap[line];(void 0===prevVal||prevVal<count)&&(lineMap[line]=count)})),lineMap}getUncoveredLines(){const lc=this.getLineCoverage(),ret=[];return Object.entries(lc).forEach((([l,hits])=>{0===hits&&ret.push(l)})),ret}getBranchCoverageByLine(){const branchMap=this.branchMap,branches=this.b,ret={};return Object.entries(branchMap).forEach((([k,map])=>{const line=map.line||map.loc.start.line,branchData=branches[k];ret[line]=ret[line]||[],ret[line].push(...branchData)})),Object.entries(ret).forEach((([k,dataArray])=>{const covered=dataArray.filter((item=>item>0)),coverage=covered.length/dataArray.length*100;ret[k]={covered:covered.length,total:dataArray.length,coverage}})),ret}toJSON(){return this.data}merge(other){if(!0===other.all)return;if(!0===this.all)return void(this.data=other.data);let[hits,map]=mergeProp(this.s,this.statementMap,other.s,other.statementMap);this.data.s=hits,this.data.statementMap=map;const keyFromLocationsProp=x=>keyFromLoc(x.locations[0]);[hits,map]=mergeProp(this.f,this.fnMap,other.f,other.fnMap,(x=>keyFromLoc(x.loc))),this.data.f=hits,this.data.fnMap=map,[hits,map]=mergeProp(this.b,this.branchMap,other.b,other.branchMap,keyFromLocationsProp),this.data.b=hits,this.data.branchMap=map,this.bT&&other.bT&&([hits,map]=mergeProp(this.bT,this.branchMap,other.bT,other.branchMap,keyFromLocationsProp),this.data.bT=hits)}computeSimpleTotals(property){let stats=this[property];"function"==typeof stats&&(stats=stats.call(this));const ret={total:Object.keys(stats).length,covered:Object.values(stats).filter((v=>!!v)).length,skipped:0};return ret.pct=percent(ret.covered,ret.total),ret}computeBranchTotals(property){const stats=this[property],ret={total:0,covered:0,skipped:0};return Object.values(stats).forEach((branches=>{ret.covered+=branches.filter((hits=>hits>0)).length,ret.total+=branches.length})),ret.pct=percent(ret.covered,ret.total),ret}resetHits(){const statements=this.s,functions=this.f,branches=this.b,branchesTrue=this.bT;Object.keys(statements).forEach((s=>{statements[s]=0})),Object.keys(functions).forEach((f=>{functions[f]=0})),Object.keys(branches).forEach((b=>{branches[b].fill(0)})),branchesTrue&&Object.keys(branchesTrue).forEach((bT=>{branchesTrue[bT].fill(0)}))}toSummary(){const ret={};return ret.lines=this.computeSimpleTotals("getLineCoverage"),ret.functions=this.computeSimpleTotals("f","fnMap"),ret.statements=this.computeSimpleTotals("s","statementMap"),ret.branches=this.computeBranchTotals("b"),this.bt&&(ret.branchesTrue=this.computeBranchTotals("bT")),new CoverageSummary(ret)}}dataProperties(FileCoverage,["path","statementMap","fnMap","branchMap","s","f","b","bT","all"]),module.exports={FileCoverage}},"./node_modules/istanbul-lib-coverage/lib/percent.js":module=>{module.exports=function percent(covered,total){let tmp;return total>0?(tmp=1e5*covered/total,Math.floor(tmp/10)/100):100}}}]);